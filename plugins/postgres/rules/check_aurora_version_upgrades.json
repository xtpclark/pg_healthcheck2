{
  "minor_version_upgrade_available": {
    "metric_keywords": [
      "available_minor_upgrades"
    ],
    "rules": [
      {
        "expression": "len(data) >= 3",
        "level": "high",
        "score": 7,
        "reasoning": "Your Aurora PostgreSQL instance is {len(data)} minor version(s) behind the latest release. Minor version upgrades include important security patches and bug fixes.",
        "recommendations": [
          "HIGH PRIORITY: Plan to upgrade to the latest minor version as soon as possible.",
          "Minor version upgrades are typically low-risk and include critical security updates.",
          "Test the upgrade in a staging environment first to validate application compatibility.",
          "Review the Aurora PostgreSQL release notes for any behavioral changes.",
          "Consider enabling automatic minor version upgrades in your maintenance window."
        ]
      },
      {
        "expression": "len(data) >= 1",
        "level": "medium",
        "score": 5,
        "reasoning": "Your Aurora PostgreSQL instance has {len(data)} minor version upgrade(s) available. Staying current with minor versions ensures you have the latest security patches.",
        "recommendations": [
          "Plan to upgrade to the latest minor version during your next maintenance window.",
          "Review the release notes to understand what fixes and improvements are included.",
          "Test in staging before applying to production.",
          "Minor version upgrades typically have minimal risk of breaking changes."
        ]
      }
    ]
  },
  "major_version_upgrade_available": {
    "metric_keywords": [
      "available_major_upgrades"
    ],
    "rules": [
      {
        "expression": "len(data) >= 2",
        "level": "medium",
        "score": 6,
        "reasoning": "Your Aurora PostgreSQL instance is {len(data)} major version(s) behind. Major version upgrades provide significant performance improvements, new features, and extended support timelines.",
        "recommendations": [
          "Evaluate upgrading to a newer major version to benefit from performance improvements and new features.",
          "IMPORTANT: Major version upgrades require thorough testing and planning.",
          "Review all breaking changes and deprecated features in the PostgreSQL release notes.",
          "Use Aurora's blue/green deployment feature for safer major version upgrades with quick rollback capability.",
          "Test application compatibility extensively in staging environment.",
          "Plan for extended testing window (2-4 weeks recommended).",
          "Consider that older major versions will eventually reach end-of-life and lose support."
        ]
      },
      {
        "expression": "len(data) == 1",
        "level": "low",
        "score": 3,
        "reasoning": "A newer major version of Aurora PostgreSQL is available. Consider upgrading for improved performance and new features.",
        "recommendations": [
          "Evaluate the benefits of upgrading to the newer major version.",
          "Review release notes for new features and performance improvements.",
          "Plan for comprehensive testing before upgrading major versions.",
          "Consider using Aurora blue/green deployments for zero-downtime upgrades."
        ]
      }
    ]
  },
  "current_version_info": {
    "metric_keywords": [
      "current_version"
    ],
    "rules": [
      {
        "expression": "data.get('postgresql_major', 0) < 15",
        "level": "high",
        "score": 8,
        "reasoning": "Your Aurora instance is running PostgreSQL {data.get('postgresql_major')}.{data.get('postgresql_minor')}, which is an older major version. Older versions may be approaching end-of-life and missing important features and performance improvements.",
        "recommendations": [
          "IMPORTANT: Plan for a major version upgrade to avoid end-of-life support issues.",
          "PostgreSQL 15+ includes significant performance improvements, especially for large workloads.",
          "Review your application for compatibility with newer PostgreSQL versions.",
          "Use Aurora blue/green deployments for minimal downtime during upgrade.",
          "Check Aurora's version support lifecycle: https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.VersionPolicy.html"
        ]
      }
    ]
  }
}
